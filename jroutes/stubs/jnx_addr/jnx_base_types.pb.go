// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jnx_base_types.proto

package jnxBase

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//*
// Global status codes to be returned in response messages.
// Per-RPC specific status/error codes are to be conveyed
// in sub-codes defined in respective API definitions.
type StatusCode int32

const (
	//* Indicates that the RPC executed without error
	StatusCode_SUCCESS StatusCode = 0
	//* Indicates a failure condition that should be treated as fatal
	StatusCode_FAILURE StatusCode = 1
)

var StatusCode_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}

var StatusCode_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ddac6831582cc7c1, []int{0}
}

//*
// Message containing an associated key value
// pair
type StrKeyStrVal struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrKeyStrVal) Reset()         { *m = StrKeyStrVal{} }
func (m *StrKeyStrVal) String() string { return proto.CompactTextString(m) }
func (*StrKeyStrVal) ProtoMessage()    {}
func (*StrKeyStrVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddac6831582cc7c1, []int{0}
}

func (m *StrKeyStrVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrKeyStrVal.Unmarshal(m, b)
}
func (m *StrKeyStrVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrKeyStrVal.Marshal(b, m, deterministic)
}
func (m *StrKeyStrVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrKeyStrVal.Merge(m, src)
}
func (m *StrKeyStrVal) XXX_Size() int {
	return xxx_messageInfo_StrKeyStrVal.Size(m)
}
func (m *StrKeyStrVal) XXX_DiscardUnknown() {
	xxx_messageInfo_StrKeyStrVal.DiscardUnknown(m)
}

var xxx_messageInfo_StrKeyStrVal proto.InternalMessageInfo

func (m *StrKeyStrVal) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StrKeyStrVal) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

//*
// Message representing timeval structure
type TimeVal struct {
	Seconds              uint64   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Microseconds         uint64   `protobuf:"varint,2,opt,name=microseconds,proto3" json:"microseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeVal) Reset()         { *m = TimeVal{} }
func (m *TimeVal) String() string { return proto.CompactTextString(m) }
func (*TimeVal) ProtoMessage()    {}
func (*TimeVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddac6831582cc7c1, []int{1}
}

func (m *TimeVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeVal.Unmarshal(m, b)
}
func (m *TimeVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeVal.Marshal(b, m, deterministic)
}
func (m *TimeVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeVal.Merge(m, src)
}
func (m *TimeVal) XXX_Size() int {
	return xxx_messageInfo_TimeVal.Size(m)
}
func (m *TimeVal) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeVal.DiscardUnknown(m)
}

var xxx_messageInfo_TimeVal proto.InternalMessageInfo

func (m *TimeVal) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *TimeVal) GetMicroseconds() uint64 {
	if m != nil {
		return m.Microseconds
	}
	return 0
}

//*
// RPC execution status information
type RpcStatus struct {
	//*
	// Numerical code indicating success or failure of an RPC
	Code StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=jnxBase.StatusCode" json:"code,omitempty"`
	//*
	// Informational message string usually used to convey reason for the
	// RPC failure
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcStatus) Reset()         { *m = RpcStatus{} }
func (m *RpcStatus) String() string { return proto.CompactTextString(m) }
func (*RpcStatus) ProtoMessage()    {}
func (*RpcStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddac6831582cc7c1, []int{2}
}

func (m *RpcStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcStatus.Unmarshal(m, b)
}
func (m *RpcStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcStatus.Marshal(b, m, deterministic)
}
func (m *RpcStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcStatus.Merge(m, src)
}
func (m *RpcStatus) XXX_Size() int {
	return xxx_messageInfo_RpcStatus.Size(m)
}
func (m *RpcStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RpcStatus proto.InternalMessageInfo

func (m *RpcStatus) GetCode() StatusCode {
	if m != nil {
		return m.Code
	}
	return StatusCode_SUCCESS
}

func (m *RpcStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

var E_JapiVersion = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FileOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50000,
	Name:          "jnxBase.japi_version",
	Tag:           "bytes,50000,opt,name=japi_version",
	Filename:      "jnx_base_types.proto",
}

func init() {
	proto.RegisterEnum("jnxBase.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterType((*StrKeyStrVal)(nil), "jnxBase.StrKeyStrVal")
	proto.RegisterType((*TimeVal)(nil), "jnxBase.TimeVal")
	proto.RegisterType((*RpcStatus)(nil), "jnxBase.RpcStatus")
	proto.RegisterExtension(E_JapiVersion)
}

func init() { proto.RegisterFile("jnx_base_types.proto", fileDescriptor_ddac6831582cc7c1) }

var fileDescriptor_ddac6831582cc7c1 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4b, 0xfb, 0x30,
	0x18, 0xc7, 0x7f, 0xfb, 0xf3, 0xb3, 0xec, 0xd9, 0x90, 0x11, 0x77, 0x28, 0xe2, 0x61, 0xf4, 0xa0,
	0xe2, 0x21, 0x03, 0x05, 0x0f, 0xde, 0xe6, 0xd8, 0x44, 0x14, 0x85, 0xc6, 0xed, 0x3a, 0xb2, 0xf6,
	0xb1, 0xa4, 0xb6, 0x4d, 0x48, 0xd2, 0xb1, 0xbe, 0x01, 0x5f, 0x9f, 0x2f, 0x49, 0x9a, 0x5a, 0xc4,
	0x5b, 0xbe, 0x7f, 0x3e, 0x79, 0x92, 0x07, 0x26, 0x69, 0x71, 0xd8, 0xee, 0xb8, 0xc1, 0xad, 0xad,
	0x14, 0x1a, 0xaa, 0xb4, 0xb4, 0x92, 0x78, 0x69, 0x71, 0xb8, 0xe7, 0x06, 0x4f, 0xa7, 0x89, 0x94,
	0x49, 0x86, 0x33, 0x67, 0xef, 0xca, 0xf7, 0x59, 0x8c, 0x26, 0xd2, 0x42, 0x59, 0xa9, 0x9b, 0x6a,
	0x70, 0x0b, 0x23, 0x66, 0xf5, 0x13, 0x56, 0xcc, 0xea, 0x0d, 0xcf, 0xc8, 0x18, 0x7a, 0x1f, 0x58,
	0xf9, 0x9d, 0x69, 0xe7, 0x72, 0x10, 0xd6, 0x47, 0x32, 0x81, 0xff, 0x7b, 0x9e, 0x95, 0xe8, 0x77,
	0x9d, 0xd7, 0x88, 0xe0, 0x01, 0xbc, 0x37, 0x91, 0x63, 0x8d, 0xf8, 0xe0, 0x19, 0x8c, 0x64, 0x11,
	0x1b, 0x87, 0xf5, 0xc3, 0x56, 0x92, 0x00, 0x46, 0xb9, 0x88, 0xb4, 0x6c, 0xe3, 0xae, 0x8b, 0xff,
	0x78, 0xc1, 0x0b, 0x0c, 0x42, 0x15, 0x31, 0xcb, 0x6d, 0x69, 0xc8, 0x05, 0xf4, 0x23, 0x19, 0xa3,
	0xbb, 0xe7, 0xf8, 0xfa, 0x84, 0xfe, 0xfc, 0x83, 0x36, 0xf1, 0x42, 0xc6, 0x18, 0xba, 0x42, 0x3d,
	0x33, 0x47, 0x63, 0x78, 0xd2, 0x3e, 0xab, 0x95, 0x57, 0xe7, 0x00, 0xbf, 0x6d, 0x32, 0x04, 0x8f,
	0xad, 0x17, 0x8b, 0x25, 0x63, 0xe3, 0x7f, 0xb5, 0x58, 0xcd, 0x1f, 0x9f, 0xd7, 0xe1, 0x72, 0xdc,
	0xb9, 0x9b, 0xc3, 0x28, 0xe5, 0x4a, 0x6c, 0xf7, 0xa8, 0x8d, 0x90, 0x05, 0x39, 0xa3, 0xcd, 0xae,
	0x68, 0xbb, 0x2b, 0xba, 0x12, 0x19, 0xbe, 0x2a, 0x2b, 0x64, 0x61, 0xfc, 0xaf, 0xcf, 0x9e, 0x1b,
	0x33, 0xac, 0x99, 0x4d, 0x83, 0xec, 0x8e, 0x5c, 0xf5, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x34,
	0x64, 0xf3, 0xce, 0x85, 0x01, 0x00, 0x00,
}
